apply plugin: 'application'

def buildprop = new Properties()
file("build.properties").withInputStream { buildprop.load(it) }

group = buildprop.group
archivesBaseName = buildprop.name
version = buildprop.version

application {
    mainClass = buildprop.group + ".Main"
}

File runningDir = project.projectDir.toPath().resolve(buildprop.run_dir).toFile()
runningDir.mkdirs()
tasks.run.workingDir = runningDir

switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

dependencies {
    implementation project(":common")
    implementation "org.l33tlabs.twl:pngdecoder:1.0"
    implementation "org.lwjgl:lwjgl:${buildprop.lwjgl_version}"
    implementation "org.lwjgl:lwjgl-assimp:${buildprop.lwjgl_version}"
    implementation "org.lwjgl:lwjgl-glfw:${buildprop.lwjgl_version}"
    implementation "org.lwjgl:lwjgl-openal:${buildprop.lwjgl_version}"
    implementation "org.lwjgl:lwjgl-opengl:${buildprop.lwjgl_version}"
    implementation "org.lwjgl:lwjgl-stb:${buildprop.lwjgl_version}"
    runtimeOnly "org.lwjgl:lwjgl:${buildprop.lwjgl_version}:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp:${buildprop.lwjgl_version}:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw:${buildprop.lwjgl_version}:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal:${buildprop.lwjgl_version}:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl:${buildprop.lwjgl_version}:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb:${buildprop.lwjgl_version}:$lwjglNatives"
}